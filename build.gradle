plugins {
    id 'java'
    id 'maven-publish'
    id 'com.github.johnrengelman.shadow' version '7.1.2'
}

java {
    toolchain.languageVersion = JavaLanguageVersion.of(17)
    withSourcesJar()
}

group 'net.covers1624'
archivesBaseName = "BadCodeScanner"
version '0.2.1'

version = "$version." + (System.getenv("BUILD_NUMBER") ?: "1")
println "Starting build of ${archivesBaseName}, Version: ${version}"

repositories {
    mavenCentral()
    jcenter()
    mavenLocal()
    maven { url 'https://maven.covers1624.net/' }
    maven { url "https://libraries.minecraft.net" }
}

dependencies {
    implementation 'org.apache.logging.log4j:log4j-core:2.19.0'

    implementation 'org.ow2.asm:asm:9.4'
    implementation 'org.ow2.asm:asm-tree:9.4'
    implementation 'org.ow2.asm:asm-commons:9.4'
    implementation 'org.ow2.asm:asm-analysis:9.4'
    implementation 'org.ow2.asm:asm-util:9.4'

    implementation 'net.sf.jopt-simple:jopt-simple:5.0.4'

    implementation 'com.google.code.gson:gson:2.10'
    implementation 'it.unimi.dsi:fastutil:8.5.9'
    implementation 'com.google.guava:guava:31.1-jre'
    implementation 'net.covers1624:Quack:0.4.3.53'
    implementation 'codechicken:ChickenASM:2.0.1.14'

    compileOnly 'org.jetbrains:annotations:23.0.0'
}

test {
    useJUnitPlatform()
}

def commonManifest = {
    attributes 'Main-Class': 'net.covers1624.bcs.BadCodeScanner'
}

jar {
    manifest commonManifest
    from file("LICENSE.txt")
}

shadowJar {
    minimize()
    manifest commonManifest

    // Include license, exclude java9 and maven things.
    from file("LICENSE.txt")
    exclude 'META-INF/maven/**'
    exclude 'module-info.class'
}

build.dependsOn shadowJar

publishing {
    repositories {
        if (System.getenv('MAVEN_PASS')) {
            maven {
                url "https://nexus.covers1624.net/repository/maven-releases/"
                credentials {
                    username 'covers1624'
                    password System.getenv('MAVEN_PASS')
                }
            }
        }
    }
    publications {
        publication(MavenPublication) {
            groupId project.group
            artifactId project.archivesBaseName
            version project.version
            from components['java']

            pom {
                name = archivesBaseName
                description = archivesBaseName
                //The publish plugin doesnt like GString's here apparently..
                url = "https://github.com/covers1624/${archivesBaseName}".toString()
                scm {
                    url = "https://github.com/covers1624/${archivesBaseName}".toString()
                    connection = "scm:git:git://github.com/covers1624/${archivesBaseName}.git".toString()
                    connection = "scm:git:git@github.com:covers1624/${archivesBaseName}.git".toString()
                }

                issueManagement {
                    system = 'github'
                    url = "https://github.com/covers1624/${archivesBaseName}/issues".toString()
                }
                licenses {
                    license {
                        name = "MIT"
                        url = "https://raw.githubusercontent.com/covers1624/${archivesBaseName}/master/LICENSE.txt".toString()
                        distribution = 'repo'
                    }
                }
                developers {
                    developer {
                        id = 'covers1624'
                        name = 'covers1624'
                    }
                }
            }
        }
    }
}
